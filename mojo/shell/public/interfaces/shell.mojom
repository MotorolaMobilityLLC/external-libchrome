// Copyright 2015 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module mojo.shell.mojom;

import "mojo/shell/public/interfaces/connector.mojom";
import "mojo/shell/public/interfaces/shell_client_factory.mojom";

struct InstanceInfo {
  uint32 id;
  string name;
  string qualifier;
  uint32 pid;
};

// Implemented by a client that wishes to be informed when the list of running
// instances changes.
interface InstanceListener {
  // Called once when the listener is added via Shell::AddInstanceListener() to
  // provide the initial list of instances that the listener observes changes
  // against.
  SetExistingInstances(array<InstanceInfo> instances);

  // Called when the shell has started tracking an instance. This happens when
  // the shell first handles a request to launch the instance, before any
  // process is created for it.
  InstanceCreated(InstanceInfo instance);

  // Called when the shell has stopped tracking an instance. (i.e. when it has
  // ended/quit).
  InstanceDestroyed(uint32 id);

  // Called when a pid is available for the instance. This could be because a
  // process was created by the runner for it, or because an existing content
  // handler process was assigned.
  InstancePIDAvailable(uint32 id, uint32 pid);
};

// Implemented by an object in the shell associated with a specific instance.
// Tells it the PID for a process launched by the client. This interface is only
// available to callers of Shell::CreateInstanceForFactory().
interface PIDReceiver {
  SetPID(uint32 pid);
};

// Specifies a whitelist of applications and services an application can connect
// to. Connections to applications not explicitly specified here as a key are
// rejected. Connections to services not specified in an application's allowed
// interfaces value are not made.
// A "*" value as the only key in an otherwise empty map means the application
// may connect to any other application.
// A "*" value as the only string in an otherwise empty array of interface names
// means the application may connect to any service in that application.
// An empty interface name array means the application may not connect to any
// services exposed by the application it is connecting to.
struct CapabilityFilter {
  map<string, array<string>> filter;
};

interface Shell {
  // Instructs the Shell to create an instance for an existing process at the
  // other end of |factory|, and perform applicable initialization. |user_id| is
  // the user the instance should be created as. This is typically set to
  // Connector::kUserInherit, unless the application has the ability to connect
  // as other users.
  CreateInstanceForFactory(ShellClientFactory factory,
                           string name,
                           string user_id,
                           CapabilityFilter filter,
                           PIDReceiver& pid_receiver);

  // The listener is removed when the |listener| pipe is closed.
  AddInstanceListener(InstanceListener listener);
};
