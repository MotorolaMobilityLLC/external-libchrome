// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module mojo.shell.mojom;

// Specifies a whitelist of applications and services an application can connect
// to. Connections to applications not explicitly specified here as a key are
// rejected. Connections to services not specified in an application's allowed
// interfaces value are not made.
// A "*" value as the only key in an otherwise empty map means the application
// may connect to any other application.
// A "*" value as the only string in an otherwise empty array of interface names
// means the application may connect to any service in that application.
// An empty interface name array means the application may not connect to any
// services exposed by the application it is connecting to.
struct CapabilityFilter {
  map<string, array<string>> filter;
};

// Implemented exclusively for the Mojo Shell's use in resolving mojo: names
// and reading static manifest information.
interface ShellResolver {
  // Resolves |mojo_name| to the following metadata:
  //
  // resolved_mojo_name
  //  another mojo: name of an application implementing mojo::ShellClientFactory
  //  that can handle connections to |mojo_name|.
  //
  // qualifier
  //  an additional piece of metadata that identifies what instance
  //  |resolved_mojo_name| should be run in. It's possible that
  //  |resolved_mojo_name| may provide several services that should be run as
  //  different instances.
  //
  // mojo_file_url
  //  a file URL to the application specified in |resolved_mojo_name|
  //  TODO(beng): what if |resolved_mojo_name| needs to be re-resolved??
  // 
  // filter
  //  the base CapabilityFilter within which an instance of |resolved_mojo_name|
  //  must be run for |mojo_name|.
  //
  // If |mojo_name| can't be resolved (i.e. not a mojo: or exe: scheme), then
  // the callback will be run with null |mojo_file_url|, and |filter|.
  ResolveMojoName(string mojo_name) =>
      (string resolved_mojo_name,
       string qualifier,
       CapabilityFilter? filter,
       string? mojo_file_url);
};
