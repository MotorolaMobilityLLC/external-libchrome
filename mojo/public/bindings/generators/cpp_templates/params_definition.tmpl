{%- import "struct_macros.tmpl" as struct_macros %}
{%- set class_name = struct.name ~ "_Data" %}
{%- set method_name = "k%s_%s_Name"|format(interface.name, method.name) %}
const uint32_t {{method_name}} = {{method.ordinal}};
class {{class_name}} {
 public:
  static {{class_name}}* New(mojo::Buffer* buf) {
    return new (buf->Allocate(sizeof({{class_name}})))
        {{class_name}}();
  }

{#--- Setters -#}
{{ struct_macros.setters(struct) }}

{#--- Getters -#}
{{ struct_macros.getters(struct) }}

 private:
  friend class mojo::internal::ObjectTraits<{{class_name}}>;

  {{class_name}}() {
    _header_.num_bytes = sizeof(*this);
    _header_.num_fields = 3;
  }

  mojo::internal::StructHeader _header_;
{{ struct_macros.fields(struct) }}
};
MOJO_COMPILE_ASSERT(sizeof({{class_name}}) == {{struct.packed|struct_size}},
                    bad_sizeof_{{class_name}});
