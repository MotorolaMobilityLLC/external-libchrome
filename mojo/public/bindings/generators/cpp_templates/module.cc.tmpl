// Copyright 2013 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif

#include "{{module.path}}.h"

#include "mojo/public/cpp/bindings/lib/bindings_serialization.h"
#include "mojo/public/cpp/bindings/lib/message_builder.h"

namespace {{namespace}} {
namespace internal {
namespace {

#pragma pack(push, 1)

{#--- Interface parameter definitions #}
{%- for interface in interfaces %}
{%-   for method in interface.methods %}
{%-     set method_name = "k%s_%s_Name"|format(interface.name, method.name) %}
const uint32_t {{method_name}} = {{method.ordinal}};
{%      set struct = interface|struct_from_method(method) %}
{%-     include "params_definition.tmpl" %}
{%-     if method.response_parameters != None %}
{%-       set struct = interface|response_struct_from_method(method) %}
{%-       include "params_definition.tmpl" %}
{%-     endif %}
{%-   endfor %}
{%- endfor %}

#pragma pack(pop)

}  // namespace

{#--- Struct destructors #}
{%- for struct in structs %}
{%-   include "struct_destructor.tmpl" %}
{%- endfor %}

{#--- Struct definitions #}
{%  for struct in structs %}
{%-   include "struct_definition.tmpl" %}
{%- endfor %}

}  // namespace internal

{#--- Struct builder definitions #}
{%- for struct in structs %}
{%-   include "struct_builder_definition.tmpl" %}
{%- endfor %}

{#--- Interface definitions #}
{%- for interface in interfaces %}
{%-   include "interface_definition.tmpl" %}
{%- endfor %}
}  // namespace {{namespace}}

#if defined(__clang__)
#pragma clang diagnostic pop
#endif
