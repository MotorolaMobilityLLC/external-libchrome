// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

{%- set header_guard = "%s_SHARED_H_"|format(
        module.path|upper|replace("/","_")|replace(".","_")|
            replace("-", "_")) %}

#ifndef {{header_guard}}
#define {{header_guard}}

#include <stdint.h>

#include <functional>
#include <ostream>
#include <type_traits>
#include <utility>

#include "mojo/public/cpp/bindings/enum_traits.h"
#include "mojo/public/cpp/bindings/lib/serialization_forward.h"
#include "mojo/public/cpp/bindings/native_enum.h"
#include "{{module.path}}-shared-internal.h"
{%- for import in imports %}
#include "{{import.module.path}}-shared.h"
{%- endfor %}

{%-   for namespace in namespaces_as_array %}
namespace {{namespace}} {
{%-   endfor %}

{#--- Enums #}
{%- from "enum_macros.tmpl" import enum_decl%}
{%- for enum in all_enums %}
{%-   if enum|is_native_only_kind %}
using {{enum.name}} = mojo::NativeEnum;
{%-   else %}
{{enum_decl(enum)}}
{%-   endif %}
{%- endfor %}

{%-   for namespace in namespaces_as_array|reverse %}
}  // namespace {{namespace}}
{%-   endfor %}

namespace std {

{%- from "enum_macros.tmpl" import enum_hash %}
{%- for enum in all_enums %}
{%-   if not enum|is_native_only_kind %}
{{enum_hash(enum)}}
{%-   endif %}
{%- endfor %}

}  // namespace std

namespace mojo {

{#--- Enum Serialization Helpers -#}
{%- for enum in all_enums %}
{%-   if not enum|is_native_only_kind %}
{%      include "enum_serialization_declaration.tmpl" %}
{%-   endif %}
{%- endfor %}

}  // namespace mojo

#endif  // {{header_guard}}

