{%- import "struct_macros.tmpl" as struct_macros %}
{%- set class_name = struct.name ~ "_Data" %}
class {{class_name}} {
 public:
  static {{class_name}}* New(mojo::internal::Buffer* buf) {
    return new (buf->Allocate(sizeof({{class_name}})))
        {{class_name}}();
  }

  mojo::internal::StructHeader header_;
{{struct_macros.fields(struct)}}

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles) {
    {{ struct_macros.encodes(struct)|indent(4) }}
  }

  bool DecodePointersAndHandles(mojo::Message* message) {
    {{ struct_macros.decodes(struct)|indent(4) }}
    return true;
  }

 private:
  {{class_name}}() {
    header_.num_bytes = sizeof(*this);
    header_.num_fields = {{struct.packed.packed_fields|length}};
  }
};
MOJO_COMPILE_ASSERT(sizeof({{class_name}}) == {{struct.packed|struct_size}},
                    bad_sizeof_{{class_name}});
