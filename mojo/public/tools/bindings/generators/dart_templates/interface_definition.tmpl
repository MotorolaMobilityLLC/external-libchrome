{%- for method in interface.methods %}
const int k{{interface.name}}_{{method.name}}_name = {{method.ordinal}};
{%- endfor %}

abstract class {{interface.name}}Calls {
  void enqueueMessage(Type t, int name, Object msg);
  Future enqueueMessageWithRequestID(Type t, int name, int id, Object msg);
  bool get isOpen;

{%- for method in interface.methods %}
{%- if method.response_parameters == None %}
  void call{{method.name}}(
{%- for parameter in method.parameters -%}
    {{parameter.kind|dart_decl_type}} {{parameter.name}}{% if not loop.last %}, {% endif %}
{%- endfor -%}
  ) {
    assert(isOpen);
    var params = new {{interface.name}}_{{method.name}}_Params();
{%- for parameter in method.parameters %}
    params.{{parameter.name}} = {{parameter.name}};
{%- endfor %}
    enqueueMessage({{interface.name}}_{{method.name}}_Params,
                   k{{interface.name}}_{{method.name}}_name,
                   params);
  }
{% else %}
  Future<{{interface.name}}_{{method.name}}_ResponseParams> call{{method.name}}(
{%- for parameter in method.parameters -%}
    {{parameter.kind|dart_decl_type}} {{parameter.name}}{% if not loop.last %}, {% endif %}
{%- endfor -%}
  ) {
    assert(isOpen);
    var params = new {{interface.name}}_{{method.name}}_Params();
{%- for parameter in method.parameters %}
    params.{{parameter.name}} = {{parameter.name}};
{%- endfor %}
    return enqueueMessageWithRequestID(
        {{interface.name}}_{{method.name}}_Params,
        k{{interface.name}}_{{method.name}}_name,
        0,
        bindings.kMessageExpectsResponse,
        params);
  }
{%- endif %}
{%- endfor %}
}

class {{interface.name}}Client extends bindings.Client with {{interface.name}}Calls {
  {{interface.name}}Client(core.MojoMessagePipeEndpoint endpoint) : super(endpoint);

  void handleResponse(bindings.MessageReader reader) {
    switch (reader.name) {
{%- for method in interface.methods %}
{%- if method.response_parameters != None %}
      case k{{interface.name}}_{{method.name}}_name:
        var r = reader.decodeStruct({{interface.name}}_{{method.name}}_ResponseParams);
        Completer c = completerQueue.removeAt(0);
        c.complete(r);
        break;
{%- endif %}
{%- endfor %}
      default:
        throw new Exception("Unexpected message name");
        break;
    }
  }
}


abstract class {{interface.name}}Interface extends bindings.Interface
{% if interface.client != None -%}
with {{imported_from[interface.client]}}{{interface.client}}Calls
{% endif -%} {
  {{interface.name}}Interface(core.MojoMessagePipeEndpoint endpoint) : super(endpoint);

{% for method in interface.methods %}
{%- if method.response_parameters == None %}
  void {{method.name|stylize_method}}(
  {%- for parameter in method.parameters -%}
    {{parameter.kind|dart_decl_type}} {{parameter.name}}{% if not loop.last %}, {% endif %}
  {%- endfor -%}
  );
{%- else %}
  {{interface.name}}_{{method.name}}_ResponseParams {{method.name|stylize_method}}(
  {%- for parameter in method.parameters -%}
    {{parameter.kind|dart_decl_type}} {{parameter.name}}{% if not loop.last %}, {% endif %}
  {%- endfor -%}
  );
{%- endif %}
{%- endfor %}

  bindings.Message handleMessage(bindings.MessageReader reader) {
    switch (reader.name) {
{%- for method in interface.methods %}
      case k{{interface.name}}_{{method.name}}_name:
        var params = reader.decodeStruct({{interface.name}}_{{method.name}}_Params);
{%- if method.response_parameters == None %}
        {{method.name|stylize_method}}(params);
{%- else %}
        var response = {{method.name|stylize_method}}(
          {%- for parameter in method.parameters -%}
              params.{{parameter.name}}{% if not loop.last %}, {% endif %}
          {%- endfor -%}
        );
        return buildResponseWithID(
            {{interface.name}}_{{method.name}}_ResponseParams,
            k{{interface.name}}_{{method.name}}_name,
            reader.requestID,
            bindings.kMessageIsResponse,
            response);
{%- endif %}
        break;
{%- endfor %}
      default:
        throw new Exception("Unexpected message name");
        break;
    }
    return null;
  }
}


{#--- TODO(zra): Validation #}


{#--- Interface Constants #}
{% for constant in interface.constants %}
final {{constant.name}} = {{constant.value|expression_to_text}};
{%-   endfor %}


{#--- Interface Enums #}
{%- from "enum_definition.tmpl" import enum_def -%}
{%- for enum in interface.enums %}
  {{ enum_def("", enum) }}
{%-  endfor %}
