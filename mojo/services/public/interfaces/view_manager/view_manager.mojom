// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module mojo.services.view_manager {

// Each View is identified by the following pair. The |manager_id| is assigned
// by the server and uniquely identifies the ViewManager. A value of 0 can be
// used to indicate 'this' manager. The |view_id| is assigned by the client.
// Non-negative values may be used. Server uses negative to identify special
// values. For example, -1 is the root.
struct ViewId {
  int32 manager_id;
  int32 view_id;
};

[Peer=ViewManagerClient]
interface ViewManager {
  // Creates a new view with the specified id. It is up to the client to ensure
  // the id is unique to the connection (the id need not be globally unique).
  CreateView(int32 view_id) => (bool success);

  // Reparents a view.
  AddView(ViewId parent, ViewId child) => (bool success);

  // Removes a view from its current parent.
  RemoveFromParent(ViewId view) => (bool success);
};

[Peer=ViewManager]
interface ViewManagerClient {
  // Invoked once the connection has been established. |manager_id| is the id
  // used to uniquely identify the ViewManager.
  OnConnectionEstablished(int32 manager_id);
};

}
