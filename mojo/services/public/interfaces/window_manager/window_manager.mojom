// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import "mojo/public/interfaces/application/service_provider.mojom"
import "mojo/services/public/interfaces/input_events/input_events.mojom"

module mojo {

// WindowManagerService provides high level window management policies.
// WindowManagerService is used by the ViewManager. More specifically the first
// connection from the ViewManager is expected to provide the
// WindowManagerService.
[Client=WindowManagerClient]
interface WindowManagerService {
  // Asks the WindowManager to embed |url| at the appropriate place. See
  // ViewManager::Embed for details of |service_provider|.
  Embed(string url, ServiceProvider&? service_provider);

  // Called when an input event is received from the native system. It's
  // expected that when this is received the WindowManagerService will call back
  // to WindowManagerServieClient will call DispatchInputEventToView().
  OnViewInputEvent(mojo.Event event);
};

// ViewManager provides this interface for functionality only exposed to the
// WindowManagerServie.
[Client=WindowManagerService]
interface WindowManagerClient {
  // Dispatches the specified input event to the specified view.
  DispatchInputEventToView(uint32 view_id, mojo.Event event);
};

}
