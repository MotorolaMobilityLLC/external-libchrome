# Copyright (c) 2006-2008 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

Import('env')

env = env.Clone()

# This path causing linux to grab the wrong time.h
env.FilterOut(
    CPPPATH = [
        '$MAIN_DIR/..',
    ],
)

env.Prepend(
    CPPPATH = [
        '$SKIA_DIR/include',
        '$SKIA_DIR/include/corecg',
        '$SKIA_DIR/include/platform',
        '$ZLIB_DIR',
        '$LIBPNG_DIR',
        '$ICU38_DIR/public/common',
        '$ICU38_DIR/public/i18n',
    ],
    CPPDEFINES = [
        'PNG_USER_CONFIG',
        'CHROME_PNG_WRITE_SUPPORT',
        'U_STATIC_IMPLEMENTATION',
    ],
)

if env['PLATFORM'] == 'win32':
  env.Prepend(
      CCFLAGS = [
          '/TP',
          '/WX',
      ],
  )

input_files = [
  'convolver.cc',
  'image_operations.cc',
  'png_decoder.cc',
  'png_encoder.cc',
  'point.cc',
  'rect.cc',
  'size.cc',
]

if env['PLATFORM'] == 'win32':
  # Some of these aren't really Windows-specific, they're just here until
  # we have the port versions working.
  input_files.extend([
    'font_utils.cc',
    'gdi_util.cc',
    'native_theme.cc',
    'skia_utils.cc',
    'uniscribe.cc',
    'vector_canvas.cc',
    'vector_device.cc',
  ])

if env['PLATFORM'] == 'win32':
  input_files.extend([
    'gdi_util.cc',
    'bitmap_platform_device_win.cc',
    'platform_canvas_win.cc',
    'platform_device_win.cc',
  ])
elif env['PLATFORM'] == 'posix':
  input_files.extend([
    'bitmap_platform_device_linux.cc',
    'platform_canvas_linux.cc',
    'platform_device_linux.cc',
  ])

env.ChromeStaticLibrary('base_gfx', input_files)
